// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file depot/core/v1/build.proto (package depot.core.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf'
import {Message, proto3, Timestamp} from '@bufbuild/protobuf'

/**
 * @generated from message depot.core.v1.ShareBuildRequest
 */
export class ShareBuildRequest extends Message<ShareBuildRequest> {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId = ''

  constructor(data?: PartialMessage<ShareBuildRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.core.v1.ShareBuildRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'build_id', kind: 'scalar', T: 9 /* ScalarType.STRING */},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareBuildRequest {
    return new ShareBuildRequest().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareBuildRequest {
    return new ShareBuildRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareBuildRequest {
    return new ShareBuildRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a: ShareBuildRequest | PlainMessage<ShareBuildRequest> | undefined,
    b: ShareBuildRequest | PlainMessage<ShareBuildRequest> | undefined,
  ): boolean {
    return proto3.util.equals(ShareBuildRequest, a, b)
  }
}

/**
 * @generated from message depot.core.v1.ShareBuildResponse
 */
export class ShareBuildResponse extends Message<ShareBuildResponse> {
  /**
   * @generated from field: string share_url = 1;
   */
  shareUrl = ''

  constructor(data?: PartialMessage<ShareBuildResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.core.v1.ShareBuildResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'share_url', kind: 'scalar', T: 9 /* ScalarType.STRING */},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareBuildResponse {
    return new ShareBuildResponse().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareBuildResponse {
    return new ShareBuildResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareBuildResponse {
    return new ShareBuildResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a: ShareBuildResponse | PlainMessage<ShareBuildResponse> | undefined,
    b: ShareBuildResponse | PlainMessage<ShareBuildResponse> | undefined,
  ): boolean {
    return proto3.util.equals(ShareBuildResponse, a, b)
  }
}

/**
 * @generated from message depot.core.v1.StopSharingBuildRequest
 */
export class StopSharingBuildRequest extends Message<StopSharingBuildRequest> {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId = ''

  constructor(data?: PartialMessage<StopSharingBuildRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.core.v1.StopSharingBuildRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'build_id', kind: 'scalar', T: 9 /* ScalarType.STRING */},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopSharingBuildRequest {
    return new StopSharingBuildRequest().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopSharingBuildRequest {
    return new StopSharingBuildRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopSharingBuildRequest {
    return new StopSharingBuildRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a: StopSharingBuildRequest | PlainMessage<StopSharingBuildRequest> | undefined,
    b: StopSharingBuildRequest | PlainMessage<StopSharingBuildRequest> | undefined,
  ): boolean {
    return proto3.util.equals(StopSharingBuildRequest, a, b)
  }
}

/**
 * @generated from message depot.core.v1.StopSharingBuildResponse
 */
export class StopSharingBuildResponse extends Message<StopSharingBuildResponse> {
  constructor(data?: PartialMessage<StopSharingBuildResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.core.v1.StopSharingBuildResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopSharingBuildResponse {
    return new StopSharingBuildResponse().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopSharingBuildResponse {
    return new StopSharingBuildResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopSharingBuildResponse {
    return new StopSharingBuildResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a: StopSharingBuildResponse | PlainMessage<StopSharingBuildResponse> | undefined,
    b: StopSharingBuildResponse | PlainMessage<StopSharingBuildResponse> | undefined,
  ): boolean {
    return proto3.util.equals(StopSharingBuildResponse, a, b)
  }
}

/**
 * @generated from message depot.core.v1.ListBuildsRequest
 */
export class ListBuildsRequest extends Message<ListBuildsRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = ''

  /**
   * @generated from field: optional int32 page_size = 2;
   */
  pageSize?: number

  /**
   * @generated from field: optional string page_token = 3;
   */
  pageToken?: string

  constructor(data?: PartialMessage<ListBuildsRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.core.v1.ListBuildsRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'project_id', kind: 'scalar', T: 9 /* ScalarType.STRING */},
    {no: 2, name: 'page_size', kind: 'scalar', T: 5 /* ScalarType.INT32 */, opt: true},
    {no: 3, name: 'page_token', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListBuildsRequest {
    return new ListBuildsRequest().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListBuildsRequest {
    return new ListBuildsRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListBuildsRequest {
    return new ListBuildsRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a: ListBuildsRequest | PlainMessage<ListBuildsRequest> | undefined,
    b: ListBuildsRequest | PlainMessage<ListBuildsRequest> | undefined,
  ): boolean {
    return proto3.util.equals(ListBuildsRequest, a, b)
  }
}

/**
 * @generated from message depot.core.v1.ListBuildsResponse
 */
export class ListBuildsResponse extends Message<ListBuildsResponse> {
  /**
   * @generated from field: repeated depot.core.v1.Build builds = 1;
   */
  builds: Build[] = []

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = ''

  constructor(data?: PartialMessage<ListBuildsResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.core.v1.ListBuildsResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'builds', kind: 'message', T: Build, repeated: true},
    {no: 2, name: 'next_page_token', kind: 'scalar', T: 9 /* ScalarType.STRING */},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListBuildsResponse {
    return new ListBuildsResponse().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListBuildsResponse {
    return new ListBuildsResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListBuildsResponse {
    return new ListBuildsResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a: ListBuildsResponse | PlainMessage<ListBuildsResponse> | undefined,
    b: ListBuildsResponse | PlainMessage<ListBuildsResponse> | undefined,
  ): boolean {
    return proto3.util.equals(ListBuildsResponse, a, b)
  }
}

/**
 * @generated from message depot.core.v1.GetBuildRequest
 */
export class GetBuildRequest extends Message<GetBuildRequest> {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId = ''

  constructor(data?: PartialMessage<GetBuildRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.core.v1.GetBuildRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'build_id', kind: 'scalar', T: 9 /* ScalarType.STRING */},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBuildRequest {
    return new GetBuildRequest().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBuildRequest {
    return new GetBuildRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBuildRequest {
    return new GetBuildRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a: GetBuildRequest | PlainMessage<GetBuildRequest> | undefined,
    b: GetBuildRequest | PlainMessage<GetBuildRequest> | undefined,
  ): boolean {
    return proto3.util.equals(GetBuildRequest, a, b)
  }
}

/**
 * @generated from message depot.core.v1.GetBuildResponse
 */
export class GetBuildResponse extends Message<GetBuildResponse> {
  /**
   * @generated from field: depot.core.v1.Build build = 1;
   */
  build?: Build

  constructor(data?: PartialMessage<GetBuildResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.core.v1.GetBuildResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'build', kind: 'message', T: Build},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBuildResponse {
    return new GetBuildResponse().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBuildResponse {
    return new GetBuildResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBuildResponse {
    return new GetBuildResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a: GetBuildResponse | PlainMessage<GetBuildResponse> | undefined,
    b: GetBuildResponse | PlainMessage<GetBuildResponse> | undefined,
  ): boolean {
    return proto3.util.equals(GetBuildResponse, a, b)
  }
}

/**
 * @generated from message depot.core.v1.Build
 */
export class Build extends Message<Build> {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId = ''

  /**
   * @generated from field: depot.core.v1.Build.Status status = 2;
   */
  status = Build_Status.UNSPECIFIED

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp

  /**
   * @generated from field: optional google.protobuf.Timestamp started_at = 4;
   */
  startedAt?: Timestamp

  /**
   * @generated from field: optional google.protobuf.Timestamp finished_at = 5;
   */
  finishedAt?: Timestamp

  /**
   * @generated from field: optional int32 build_duration_seconds = 6;
   */
  buildDurationSeconds?: number

  /**
   * @generated from field: optional int32 saved_duration_seconds = 7;
   */
  savedDurationSeconds?: number

  /**
   * @generated from field: optional int32 cached_steps = 8;
   */
  cachedSteps?: number

  /**
   * @generated from field: optional int32 total_steps = 9;
   */
  totalSteps?: number

  constructor(data?: PartialMessage<Build>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'depot.core.v1.Build'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {no: 1, name: 'build_id', kind: 'scalar', T: 9 /* ScalarType.STRING */},
    {no: 2, name: 'status', kind: 'enum', T: proto3.getEnumType(Build_Status)},
    {no: 3, name: 'created_at', kind: 'message', T: Timestamp},
    {no: 4, name: 'started_at', kind: 'message', T: Timestamp, opt: true},
    {no: 5, name: 'finished_at', kind: 'message', T: Timestamp, opt: true},
    {no: 6, name: 'build_duration_seconds', kind: 'scalar', T: 5 /* ScalarType.INT32 */, opt: true},
    {no: 7, name: 'saved_duration_seconds', kind: 'scalar', T: 5 /* ScalarType.INT32 */, opt: true},
    {no: 8, name: 'cached_steps', kind: 'scalar', T: 5 /* ScalarType.INT32 */, opt: true},
    {no: 9, name: 'total_steps', kind: 'scalar', T: 5 /* ScalarType.INT32 */, opt: true},
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Build {
    return new Build().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Build {
    return new Build().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Build {
    return new Build().fromJsonString(jsonString, options)
  }

  static equals(a: Build | PlainMessage<Build> | undefined, b: Build | PlainMessage<Build> | undefined): boolean {
    return proto3.util.equals(Build, a, b)
  }
}

/**
 * @generated from enum depot.core.v1.Build.Status
 */
export enum Build_Status {
  /**
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATUS_RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * @generated from enum value: STATUS_FAILED = 2;
   */
  FAILED = 2,

  /**
   * @generated from enum value: STATUS_SUCCESS = 3;
   */
  SUCCESS = 3,

  /**
   * @generated from enum value: STATUS_ERROR = 4;
   */
  ERROR = 4,

  /**
   * @generated from enum value: STATUS_CANCELED = 5;
   */
  CANCELED = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(Build_Status)
proto3.util.setEnumType(Build_Status, 'depot.core.v1.Build.Status', [
  {no: 0, name: 'STATUS_UNSPECIFIED'},
  {no: 1, name: 'STATUS_RUNNING'},
  {no: 2, name: 'STATUS_FAILED'},
  {no: 3, name: 'STATUS_SUCCESS'},
  {no: 4, name: 'STATUS_ERROR'},
  {no: 5, name: 'STATUS_CANCELED'},
])
